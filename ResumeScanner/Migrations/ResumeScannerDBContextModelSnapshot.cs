// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResumeScanner.Data;

#nullable disable

namespace ResumeScanner.Migrations
{
    [DbContext(typeof(ResumeScannerDBContext))]
    partial class ResumeScannerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResumeScanner.Models.Skills", b =>
                {
                    b.Property<int>("skillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("skillId"));

                    b.Property<string>("majorDomain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("skillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ResumeScanner.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ResumeScanner.Models.UserProfile", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("graduationYear")
                        .HasColumnType("int");

                    b.Property<string>("jobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("mastersDegreeStatus")
                        .HasColumnType("int");

                    b.Property<string>("nameOfCurrentCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phdDegreeStatus")
                        .HasColumnType("int");

                    b.Property<string>("universityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("yearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("SkillsUser", b =>
                {
                    b.Property<int>("SkillsskillId")
                        .HasColumnType("int");

                    b.Property<int>("UsersuserId")
                        .HasColumnType("int");

                    b.HasKey("SkillsskillId", "UsersuserId");

                    b.HasIndex("UsersuserId");

                    b.ToTable("SkillsUser");
                });

            modelBuilder.Entity("ResumeScanner.Models.UserProfile", b =>
                {
                    b.HasOne("ResumeScanner.Models.User", "UserId")
                        .WithOne("userProfile")
                        .HasForeignKey("ResumeScanner.Models.UserProfile", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("SkillsUser", b =>
                {
                    b.HasOne("ResumeScanner.Models.Skills", null)
                        .WithMany()
                        .HasForeignKey("SkillsskillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResumeScanner.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResumeScanner.Models.User", b =>
                {
                    b.Navigation("userProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
